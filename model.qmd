---
title: "Model"
format: html
execute:
  echo: false
---

```{r}
#| label: setup
#| message: false
library(tidyverse)
library(tidybayes)
library(brms)
library(gtsummary)
```

```{r}
#| label: prepare_data

load(file = "data/DS0001/38759-0001-Data.rda")
a <- da38759.0001
rm(da38759.0001)

extract_text_after_parens <- function(x) {
  str_trim(str_replace(x, "^\\(\\d+\\)\\s*", ""))
}

dt <- a %>%
  select('Q29' | 'PPAGE' | 'PPGENDER' | 'Q1' | 'Q34' | 'Q3') %>%
  rename(health_condition = Q29,
         age = PPAGE,
         gender = PPGENDER,
         marital_status = Q1,
         limited_access = Q34,
         num_of_children = Q3) %>%
  mutate(age = scale(age),
         health_condition = 
           recode(health_condition, 
                  "(1) Yes, one condition" = "Yes",
                  "(2) Yes, more than one condition" = "Yes",
                  "(3) No" = "No"),
         marital_status = str_replace(marital_status, fixed("(5) Never married"), "(5) NeverMarried"),
         across(c(marital_status, gender, limited_access), 
                extract_text_after_parens),
         marital_status = factor(marital_status,
                                 levels = c("NeverMarried","Married","Separated","Divorced","Widowed")),
         health_condition = factor(health_condition,
                                   levels = c("No","Yes"),
                                   ordered = TRUE),
         gender = as.factor(gender),
         limited_access = as.factor(limited_access),
         num_of_children = as.factor(num_of_children)) %>%
  drop_na()
```

```{r}
#| label: model
#| cache: true

fit_condition <- brm(
  formula = health_condition ~ age + gender + marital_status + limited_access + num_of_children,
  data = dt, 
  family = bernoulli(), # two outcomes: have health condition(s) lasting 1+ years, don't have health condition
  silent = 2,
  refresh = 0,
  seed = 12)
```

```{r}
#| label: plot

age <- 0
marital_status <- c("NeverMarried","Married","Separated","Divorced","Widowed")
gender <- c("Female","Male")
limited_access <- c("No","Yes")
num_of_children <- c(0:1)

newobs <- expand_grid(age, marital_status, gender, limited_access, num_of_children)
# x |> mutate(names = paste(treatment, party, sep = "_"))

predicted <- fit_condition |> 
  add_epred_draws(newdata = newobs)

ggplot(predicted, aes(x = .epred, y = marital_status)) +
    stat_slab(aes(fill = limited_access), 
              position = 'identity',
              scale = 0.5) +
  scale_fill_brewer(palette="Dark2")

ggplot(predicted, aes(x = .epred, y = marital_status)) +
    stat_slab(aes(fill = gender), 
              position = 'identity',
              scale = 0.5) +
  scale_fill_brewer(palette="Dark2") #whether employed or not?

age <- 0
marital_status <- c("NeverMarried","Married","Divorced")
gender <- c("Female")
limited_access <- c("No")
num_of_children <- c(0:6)
newobs <- expand_grid(age, marital_status, gender, limited_access, num_of_children)
# x |> mutate(names = paste(treatment, party, sep = "_"))
predicted <- fit_condition |> 
  add_epred_draws(newdata = newobs)
predicted$num_of_children <- ifelse(predicted$num_of_children > 0, 1, 0)

ggplot(predicted, aes(x = .epred, y = marital_status)) +
    stat_slab(aes(fill = as.factor(num_of_children)), 
              position = 'identity',
              scale = 0.5)

ggplot(predicted, aes(x = .epred)) +
  geom_density() +
  labs(title = "Distribution of Predicted Values", x = "Predicted Values (.epred)", y = "Density")
```

```{r}
#| label: table
#| warning: false

tbl_regression(fit_condition, intercept = TRUE)
```

If this is a model project, there should be a Model page, created from model.qmd, which includes details about your model, including the mathematics of your data generating mechanism (displayed nicely using 𝐿𝐴𝑇𝐸𝑋
 formatting) and a table showing your parameter estimates.